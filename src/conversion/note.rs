use crate::theory_primitive::note::Note;

pub fn note_to_string(note: &Note) -> &str {
    match note {
        Note::AFlatFlat => "A𝄫",
        Note::AFlat => "A♭",
        Note::A => "A",
        Note::ASharp => "A♯",
        Note::ASharpSharp => "A𝄪",
        Note::BFlatFlat => "B𝄫",
        Note::BFlat => "B♭",
        Note::B => "B",
        Note::BSharp => "B♯",
        Note::BSharpSharp => "B𝄪",
        Note::CFlatFlat => "C𝄫",
        Note::CFlat => "C♭",
        Note::C => "C",
        Note::CSharp => "C♯",
        Note::CSharpSharp => "C𝄪",
        Note::DFlatFlat => "D𝄫",
        Note::DFlat => "D♭",
        Note::D => "D",
        Note::DSharp => "D♯",
        Note::DSharpSharp => "D𝄪",
        Note::EFlatFlat => "E𝄫",
        Note::EFlat => "E♭",
        Note::E => "E",
        Note::ESharp => "E♯",
        Note::ESharpSharp => "E𝄪",
        Note::FFlatFlat => "F𝄫",
        Note::FFlat => "F♭",
        Note::F => "F",
        Note::FSharp => "F♯",
        Note::FSharpSharp => "F𝄪",
        Note::GFlatFlat => "G𝄫",
        Note::GFlat => "G♭",
        Note::G => "G",
        Note::GSharp => "G♯",
        Note::GSharpSharp => "G𝄪",
    }
}
